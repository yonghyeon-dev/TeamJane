{"version":3,"file":"Navbar.jsx","sourceRoot":"","sources":["Navbar.tsx"],"names":[],"mappings":"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","sourcesContent":["\"use client\";\n\nimport React, { useState } from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"./\";\nimport Image from \"next/image\";\n\nexport interface NavbarProps {\n  className?: string;\n  logo?: React.ReactNode;\n  menuItems?: NavbarMenuItem[];\n  actions?: React.ReactNode;\n  variant?: \"default\" | \"transparent\" | \"elevated\";\n}\n\nexport interface NavbarMenuItem {\n  label: string;\n  href: string;\n  active?: boolean;\n  children?: NavbarMenuItem[];\n}\n\nconst Navbar = React.forwardRef<HTMLElement, NavbarProps>(\n  ({ className, logo, menuItems = [], actions, variant = \"default\" }, ref) => {\n    const [isMobileMenuOpen, setIsMobileMenuOpen] = useState(false);\n\n    const variants = {\n      default: \"bg-primary-background border-b border-primary-borderSecondary\",\n      transparent: \"bg-transparent\",\n      elevated:\n        \"bg-primary-surface border-b border-primary-borderSecondary shadow-sm\",\n    };\n\n    return (\n      <nav\n        ref={ref}\n        className={cn(\n          \"sticky top-0 z-50 w-full transition-all duration-fast\",\n          variants[variant],\n          className\n        )}\n      >\n        <div className=\"container mx-auto px-6\">\n          <div className=\"flex h-16 items-center justify-between\">\n            {/* Logo */}\n            <div className=\"flex items-center\">\n              {logo || (\n                <div className=\"flex items-center space-x-2\">\n                  <Image\n                    src=\"/logo.png\"\n                    alt=\"Weave Logo\"\n                    width={32}\n                    height={32}\n                    className=\"w-8 h-8\"\n                  />\n                  <span className=\"text-text-primary font-semibold text-lg\">\n                    Weave\n                  </span>\n                </div>\n              )}\n            </div>\n\n            {/* Desktop Menu */}\n            <div className=\"hidden md:flex items-center space-x-8\">\n              {menuItems.map((item, index) => (\n                <a\n                  key={index}\n                  href={item.href}\n                  className={cn(\n                    \"text-sm font-medium transition-colors duration-fast\",\n                    item.active\n                      ? \"text-text-primary\"\n                      : \"text-text-secondary hover:text-text-primary\"\n                  )}\n                >\n                  {item.label}\n                </a>\n              ))}\n            </div>\n\n            {/* Actions */}\n            <div className=\"flex items-center space-x-4\">\n              {actions || (\n                <>\n                  <Button variant=\"secondary\" size=\"sm\">\n                    Sign In\n                  </Button>\n                  <Button variant=\"primary\" size=\"sm\">\n                    Get Started\n                  </Button>\n                </>\n              )}\n\n              {/* Mobile Menu Button */}\n              <button\n                className=\"md:hidden p-2 rounded-lg hover:bg-primary-surfaceHover transition-colors duration-fast\"\n                onClick={() => setIsMobileMenuOpen(!isMobileMenuOpen)}\n                aria-label=\"Toggle mobile menu\"\n              >\n                <svg\n                  className=\"w-5 h-5 text-text-primary\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  {isMobileMenuOpen ? (\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M6 18L18 6M6 6l12 12\"\n                    />\n                  ) : (\n                    <path\n                      strokeLinecap=\"round\"\n                      strokeLinejoin=\"round\"\n                      strokeWidth={2}\n                      d=\"M4 6h16M4 12h16M4 18h16\"\n                    />\n                  )}\n                </svg>\n              </button>\n            </div>\n          </div>\n\n          {/* Mobile Menu */}\n          {isMobileMenuOpen && (\n            <div className=\"md:hidden border-t border-primary-borderSecondary py-4\">\n              <div className=\"flex flex-col space-y-4\">\n                {menuItems.map((item, index) => (\n                  <a\n                    key={index}\n                    href={item.href}\n                    className={cn(\n                      \"text-sm font-medium transition-colors duration-fast\",\n                      item.active\n                        ? \"text-text-primary\"\n                        : \"text-text-secondary hover:text-text-primary\"\n                    )}\n                    onClick={() => setIsMobileMenuOpen(false)}\n                  >\n                    {item.label}\n                  </a>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </nav>\n    );\n  }\n);\n\nNavbar.displayName = \"Navbar\";\n\nexport default Navbar;\n"]}