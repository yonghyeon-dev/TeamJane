{"version":3,"file":"Button.jsx","sourceRoot":"","sources":["Button.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;;AAEb,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AACjC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAcpD,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAC7B,CACE,EAUC,EACD,GAAG,EACH,EAAE;QAZF,EACE,SAAS,EACT,OAAO,GAAG,SAAS,EACnB,IAAI,GAAG,IAAI,EACX,QAAQ,EACR,OAAO,GAAG,KAAK,EACf,QAAQ,GAAG,KAAK,EAChB,SAAS,GAAG,KAAK,EACjB,OAAO,GAAG,KAAK,OAEhB,EADI,KAAK,cATV,2FAUC,CADS;IAIV,MAAM,EAAE,aAAa,EAAE,GAAG,QAAQ,EAAE,CAAC;IAErC,MAAM,UAAU,GAAG,EAAE,CACnB,sLAAsL,EACtL,SAAS,IAAI,QAAQ,CACtB,CAAC;IAEF,MAAM,QAAQ,GAAG;QACf,OAAO,EAAE,EAAE,CACT,YAAY,EACZ,iFAAiF,CAClF;QACD,SAAS,EAAE,EAAE,CACX,0CAA0C,EAC1C,oEAAoE,EACpE,+CAA+C,CAChD;QACD,KAAK,EAAE,EAAE,CACP,8DAA8D,EAC9D,uDAAuD,EACvD,gEAAgE,CACjE;QACD,MAAM,EAAE,EAAE,CACR,uDAAuD,EACvD,uCAAuC,EACvC,gEAAgE,EAChE,WAAW,CACZ;QACD,QAAQ,EAAE,EAAE,CACV,sCAAsC,EACtC,iFAAiF,EACjF,WAAW,CACZ;KACF,CAAC;IAEF,MAAM,KAAK,GAAG;QACZ,EAAE,EAAE,oCAAoC;QACxC,EAAE,EAAE,mCAAmC;QACvC,EAAE,EAAE,qCAAqC;KAC1C,CAAC;IAEF,YAAY;IACZ,MAAM,gBAAgB,GAAG,GAAG,EAAE;QAC5B,MAAM,MAAM,GAAwB,EAAE,CAAC;QAEvC,QAAQ,OAAO,EAAE,CAAC;YAChB,KAAK,SAAS;gBACZ,MAAM,CAAC,UAAU,GAAG,2BAA2B,aAAa,CAAC,OAAO,KAAK,aAAa,CAAC,SAAS,KAAK,aAAa,CAAC,OAAO,GAAG,CAAC;gBAC9H,MAAM,CAAC,MAAM,GAAG,MAAM,CAAC;gBACvB,MAAM;YACR,KAAK,WAAW;gBACd,gBAAgB;gBAChB,MAAM,CAAC,WAAW,GAAG,aAAa,CAAC;gBACnC,MAAM,CAAC,SAAS,GAAG,6DAA6D,CAAC;gBACjF,MAAM;YACR,KAAK,OAAO;gBACV,MAAM,CAAC,eAAe,GAAG,aAAa,CAAC;gBACvC,MAAM,CAAC,WAAW,GAAG,aAAa,CAAC;gBACnC,MAAM;YACR,KAAK,QAAQ;gBACX,oBAAoB;gBACpB,MAAM;YACR,KAAK,UAAU;gBACb,MAAM,CAAC,UAAU,GAAG,2BAA2B,aAAa,CAAC,SAAS,KAAK,aAAa,CAAC,OAAO,KAAK,aAAa,CAAC,OAAO,GAAG,CAAC;gBAC9H,MAAM;QACV,CAAC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC,CAAC;IAEF,MAAM,WAAW,mBACf,SAAS,EAAE,EAAE,CAAC,UAAU,EAAE,QAAQ,CAAC,OAAO,CAAC,EAAE,KAAK,CAAC,IAAI,CAAC,EAAE,SAAS,CAAC,EACpE,KAAK,EAAE,gBAAgB,EAAE,EACzB,GAAG,EACH,QAAQ,EAAE,QAAQ,IAAI,OAAO,IAC1B,KAAK,CACT,CAAC;IAEF,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,KAAK,CAAC,YAAY,CAAC,QAA8B,EAAE,WAAW,CAAC,CAAC;IACzE,CAAC;IAED,OAAO,CACL,CAAC,MAAM,CAAC,IAAI,WAAW,CAAC,CACtB;QAAA,CAAC,OAAO,IAAI,CACV,CAAC,GAAG,CACF,SAAS,CAAC,iCAAiC,CAC3C,KAAK,CAAC,4BAA4B,CAClC,IAAI,CAAC,MAAM,CACX,OAAO,CAAC,WAAW,CAEnB;YAAA,CAAC,MAAM,CACL,SAAS,CAAC,YAAY,CACtB,EAAE,CAAC,IAAI,CACP,EAAE,CAAC,IAAI,CACP,CAAC,CAAC,IAAI,CACN,MAAM,CAAC,cAAc,CACrB,WAAW,CAAC,GAAG,EAEjB;YAAA,CAAC,IAAI,CACH,SAAS,CAAC,YAAY,CACtB,IAAI,CAAC,cAAc,CACnB,CAAC,CAAC,iHAAiH,EAEvH;UAAA,EAAE,GAAG,CAAC,CACP,CACD;QAAA,CAAC,QAAQ,CACX;MAAA,EAAE,MAAM,CAAC,CACV,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC;AAE9B,eAAe,MAAM,CAAC","sourcesContent":["\"use client\";\n\nimport React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport { useTheme } from \"@/lib/theme/ThemeContext\";\nimport type { ButtonVariant, ButtonSize } from \"@/lib/theme/types\";\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  children: React.ReactNode;\n  loading?: boolean;\n  disabled?: boolean;\n  fullWidth?: boolean;\n  asChild?: boolean;\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      className,\n      variant = \"primary\",\n      size = \"md\",\n      children,\n      loading = false,\n      disabled = false,\n      fullWidth = false,\n      asChild = false,\n      ...props\n    },\n    ref\n  ) => {\n    const { currentColors } = useTheme();\n\n    const baseStyles = cn(\n      \"inline-flex items-center justify-center font-medium transition-all duration-fast focus:outline-none focus:ring-2 focus:ring-offset-2 disabled:opacity-50 disabled:cursor-not-allowed\",\n      fullWidth && \"w-full\"\n    );\n\n    const variants = {\n      primary: cn(\n        \"text-white\",\n        \"hover:opacity-90 focus:ring-text-secondary focus:ring-offset-primary-background\"\n      ),\n      secondary: cn(\n        \"bg-transparent border border-transparent\",\n        \"hover:bg-primary-surfaceHover hover:border-primary-borderSecondary\",\n        \"focus:ring-text-secondary focus:ring-offset-2\"\n      ),\n      ghost: cn(\n        \"bg-transparent text-text-secondary border border-transparent\",\n        \"hover:bg-primary-surfaceHover hover:text-text-primary\",\n        \"focus:ring-text-secondary focus:ring-offset-primary-background\"\n      ),\n      danger: cn(\n        \"bg-status-error text-white border border-status-error\",\n        \"hover:bg-red-600 hover:border-red-600\",\n        \"focus:ring-text-secondary focus:ring-offset-primary-background\",\n        \"shadow-sm\"\n      ),\n      gradient: cn(\n        \"text-white border border-transparent\",\n        \"hover:opacity-90 focus:ring-text-secondary focus:ring-offset-primary-background\",\n        \"shadow-sm\"\n      ),\n    };\n\n    const sizes = {\n      sm: \"px-3 py-1.5 text-xs rounded-md h-8\",\n      md: \"px-4 py-2 text-sm rounded-lg h-10\",\n      lg: \"px-6 py-3 text-base rounded-xl h-12\",\n    };\n\n    // 동적 스타일 생성\n    const getDynamicStyles = () => {\n      const styles: React.CSSProperties = {};\n\n      switch (variant) {\n        case \"primary\":\n          styles.background = `linear-gradient(135deg, ${currentColors.primary}, ${currentColors.secondary}, ${currentColors.default})`;\n          styles.border = \"none\";\n          break;\n        case \"secondary\":\n          // 투명 배경, 그림자 효과\n          styles.borderColor = \"transparent\";\n          styles.boxShadow = `0 2px 4px rgba(0, 0, 0, 0.1), 0 1px 2px rgba(0, 0, 0, 0.06)`;\n          break;\n        case \"ghost\":\n          styles.backgroundColor = \"transparent\";\n          styles.borderColor = \"transparent\";\n          break;\n        case \"danger\":\n          // danger는 기존 스타일 유지\n          break;\n        case \"gradient\":\n          styles.background = `linear-gradient(135deg, ${currentColors.secondary}, ${currentColors.default}, ${currentColors.primary})`;\n          break;\n      }\n\n      return styles;\n    };\n\n    const buttonProps = {\n      className: cn(baseStyles, variants[variant], sizes[size], className),\n      style: getDynamicStyles(),\n      ref,\n      disabled: disabled || loading,\n      ...props,\n    };\n\n    if (asChild) {\n      return React.cloneElement(children as React.ReactElement, buttonProps);\n    }\n\n    return (\n      <button {...buttonProps}>\n        {loading && (\n          <svg\n            className=\"animate-spin -ml-1 mr-2 h-4 w-4\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n            fill=\"none\"\n            viewBox=\"0 0 24 24\"\n          >\n            <circle\n              className=\"opacity-25\"\n              cx=\"12\"\n              cy=\"12\"\n              r=\"10\"\n              stroke=\"currentColor\"\n              strokeWidth=\"4\"\n            />\n            <path\n              className=\"opacity-75\"\n              fill=\"currentColor\"\n              d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"\n            />\n          </svg>\n        )}\n        {children}\n      </button>\n    );\n  }\n);\n\nButton.displayName = \"Button\";\n\nexport default Button;\n"]}