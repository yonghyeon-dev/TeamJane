{"version":3,"file":"Status.jsx","sourceRoot":"","sources":["Status.tsx"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAO,EAAE,EAAE,EAAE,MAAM,aAAa,CAAC;AAUjC,MAAM,MAAM,GAAG,KAAK,CAAC,UAAU,CAC7B,CAAC,EAAE,IAAI,EAAE,OAAO,GAAG,OAAO,EAAE,QAAQ,EAAE,SAAS,EAAE,EAAE,GAAG,EAAE,EAAE;IACxD,MAAM,UAAU,GAAG,sCAAsC,CAAC;IAE1D,MAAM,QAAQ,GAAG;QACf,KAAK,EAAE,8BAA8B;QACrC,IAAI,EAAE,gCAAgC;QACtC,GAAG,EAAE,qCAAqC;KAC3C,CAAC;IAEF,MAAM,MAAM,GAAG;QACb,OAAO,EAAE;YACP,KAAK,EACH,0EAA0E;YAC5E,IAAI,EAAE,0CAA0C;YAChD,GAAG,EAAE,qBAAqB;SAC3B;QACD,OAAO,EAAE;YACP,KAAK,EACH,0EAA0E;YAC5E,IAAI,EAAE,0CAA0C;YAChD,GAAG,EAAE,qBAAqB;SAC3B;QACD,KAAK,EAAE;YACL,KAAK,EACH,oEAAoE;YACtE,IAAI,EAAE,sCAAsC;YAC5C,GAAG,EAAE,mBAAmB;SACzB;QACD,IAAI,EAAE;YACJ,KAAK,EACH,iEAAiE;YACnE,IAAI,EAAE,oCAAoC;YAC1C,GAAG,EAAE,kBAAkB;SACxB;QACD,QAAQ,EAAE;YACR,KAAK,EACH,6EAA6E;YAC/E,IAAI,EAAE,4CAA4C;YAClD,GAAG,EAAE,sBAAsB;SAC5B;KACF,CAAC;IAEF,MAAM,SAAS,GAAG;QAChB,OAAO,EAAE,mBAAmB;QAC5B,OAAO,EAAE,mBAAmB;QAC5B,KAAK,EAAE,iBAAiB;QACxB,IAAI,EAAE,gBAAgB;QACtB,QAAQ,EAAE,oBAAoB;KAC/B,CAAC;IAEF,IAAI,OAAO,KAAK,KAAK,EAAE,CAAC;QACtB,OAAO,CACL,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,UAAU,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC,CACpE;UAAA,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,EAAE,CAAC,sBAAsB,EAAE,SAAS,CAAC,IAAI,CAAC,CAAC,CAAC,EAC5D;UAAA,CAAC,IAAI,CAAC,CAAC,QAAQ,CAAC,EAAE,IAAI,CACxB;QAAA,EAAE,GAAG,CAAC,CACP,CAAC;IACJ,CAAC;IAED,OAAO,CACL,CAAC,GAAG,CACF,GAAG,CAAC,CAAC,GAAG,CAAC,CACT,SAAS,CAAC,CAAC,EAAE,CACX,UAAU,EACV,QAAQ,CAAC,OAAO,CAAC,EACjB,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,EACrB,SAAS,CACV,CAAC,CAEF;QAAA,CAAC,QAAQ,CACX;MAAA,EAAE,GAAG,CAAC,CACP,CAAC;AACJ,CAAC,CACF,CAAC;AAEF,MAAM,CAAC,WAAW,GAAG,QAAQ,CAAC;AAE9B,eAAe,MAAM,CAAC","sourcesContent":["import React from \"react\";\nimport { cn } from \"@/lib/utils\";\nimport type { StatusType, StatusVariant } from \"@/lib/theme/types\";\n\nexport interface StatusProps {\n  type: StatusType;\n  variant?: StatusVariant;\n  children: React.ReactNode;\n  className?: string;\n}\n\nconst Status = React.forwardRef<HTMLDivElement, StatusProps>(\n  ({ type, variant = \"badge\", children, className }, ref) => {\n    const baseStyles = \"inline-flex items-center font-medium\";\n\n    const variants = {\n      badge: \"px-2 py-1 text-xs rounded-md\",\n      pill: \"px-3 py-1 text-sm rounded-full\",\n      dot: \"flex items-center space-x-2 text-sm\",\n    };\n\n    const colors = {\n      success: {\n        badge:\n          \"bg-status-success/10 text-status-success border border-status-success/20\",\n        pill: \"bg-status-success/10 text-status-success\",\n        dot: \"text-status-success\",\n      },\n      warning: {\n        badge:\n          \"bg-status-warning/10 text-status-warning border border-status-warning/20\",\n        pill: \"bg-status-warning/10 text-status-warning\",\n        dot: \"text-status-warning\",\n      },\n      error: {\n        badge:\n          \"bg-status-error/10 text-status-error border border-status-error/20\",\n        pill: \"bg-status-error/10 text-status-error\",\n        dot: \"text-status-error\",\n      },\n      info: {\n        badge:\n          \"bg-status-info/10 text-status-info border border-status-info/20\",\n        pill: \"bg-status-info/10 text-status-info\",\n        dot: \"text-status-info\",\n      },\n      progress: {\n        badge:\n          \"bg-status-progress/10 text-status-progress border border-status-progress/20\",\n        pill: \"bg-status-progress/10 text-status-progress\",\n        dot: \"text-status-progress\",\n      },\n    };\n\n    const dotColors = {\n      success: \"bg-status-success\",\n      warning: \"bg-status-warning\",\n      error: \"bg-status-error\",\n      info: \"bg-status-info\",\n      progress: \"bg-status-progress\",\n    };\n\n    if (variant === \"dot\") {\n      return (\n        <div ref={ref} className={cn(baseStyles, colors[type].dot, className)}>\n          <div className={cn(\"w-2 h-2 rounded-full\", dotColors[type])} />\n          <span>{children}</span>\n        </div>\n      );\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          baseStyles,\n          variants[variant],\n          colors[type][variant],\n          className\n        )}\n      >\n        {children}\n      </div>\n    );\n  }\n);\n\nStatus.displayName = \"Status\";\n\nexport default Status;\n"]}