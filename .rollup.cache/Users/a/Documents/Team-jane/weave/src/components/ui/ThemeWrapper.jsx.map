{"version":3,"file":"ThemeWrapper.jsx","sourceRoot":"","sources":["ThemeWrapper.tsx"],"names":[],"mappings":"AAAA,YAAY,CAAC;AAEb,OAAO,KAAK,EAAE,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AACzC,OAAO,EAAE,QAAQ,EAAE,MAAM,0BAA0B,CAAC;AAMpD,MAAM,YAAY,GAAgC,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IACjE,MAAM,EAAE,YAAY,EAAE,GAAG,QAAQ,EAAE,CAAC;IAEpC,SAAS,CAAC,GAAG,EAAE;QACb,MAAM,IAAI,GAAG,QAAQ,CAAC,eAAe,CAAC;QACtC,IAAI,CAAC,YAAY,CAAC,YAAY,EAAE,YAAY,CAAC,CAAC;IAChD,CAAC,EAAE,CAAC,YAAY,CAAC,CAAC,CAAC;IAEnB,OAAO,EAAE,CAAC,QAAQ,CAAC,GAAG,CAAC;AACzB,CAAC,CAAC;AAEF,eAAe,YAAY,CAAC","sourcesContent":["\"use client\";\n\nimport React, { useEffect } from \"react\";\nimport { useTheme } from \"@/lib/theme/ThemeContext\";\n\ninterface ThemeWrapperProps {\n  children: React.ReactNode;\n}\n\nconst ThemeWrapper: React.FC<ThemeWrapperProps> = ({ children }) => {\n  const { currentTheme } = useTheme();\n\n  useEffect(() => {\n    const html = document.documentElement;\n    html.setAttribute(\"data-theme\", currentTheme);\n  }, [currentTheme]);\n\n  return <>{children}</>;\n};\n\nexport default ThemeWrapper;\n"]}